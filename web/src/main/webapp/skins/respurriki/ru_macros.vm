### Generate a dropdown item for button
###
### @param actionurl The URL this entry points to
### @param linktext The menu item text
###
#macro(ru_dropdown_item $actionurl $linktext)
<li><a href="$actionurl">$linktext</a></li>
#end

### Generate button input
###
### @param linktext the button text
### @param attributes class, id, html5 dom data
###
#macro(ru_button $linktext $attributes)
<button type="button" $attributes>$linktext</button>
#end

### Generate anchor
###
### @param linktext the button text
### @param linkurl the url for the anchor
### @param attributes class, id, html5 dom data
###
#macro(ru_anchor $linktext $linkurl $attributes)
<a href="$linkurl" $attributes>$linktext</a>
#end

### Generate breadcrumb
###
### @param linktext the button text
### @param linkurl the url for the anchor
### @param attributes class, id, html5 dom data
###
#macro(ru_breadcrumb )
    <ol class="breadcrumb">
        <li><a href="#">GWF</a></li>
        <li><a href="#">Selling Geometry</a></li>
        <li><a href="#">Introduction</a></li>
        <li class="active">Introduction to Geometry</li>
    </ol>
#end

#**
  * Macro for verifying if an entry in the nav panel is active
  *
  *#
#macro(ru_checkActive $docname $result)
    #if($doc.fullName == $docname)
        #set ($result = $util.null)
        #if($doc.space == "MyCurriki" && "$!request.user" != "")
            #ru_setVariable ("$result" false)
        #else
            #ru_setVariable ("$result" true)
        #end
    #end
#end

#** Hack to restore the parameter-by-reference pattern that was possible
    in velocity 1.6. Pulled from XWiki 3.3
* Assign a value to a variable, given by its name. The purpose of this macro is to emulate call by macro expansion,
* which was available in velocity versions up to 1.6, but was removed in 1.7.
*
* @param variableName the name of the variable to set, a String; when the macro returns, a variable named that way will be created with the output value
* @param value the value to assign
*###
#macro(ru_setVariable $variableName $value)
## Only do this if the variable name is really a valid variable name
    #if ($variableName.matches('[a-zA-Z_][a-zA-Z0-9_-]*'))
        #evaluate("${escapetool.h}set(${escapetool.d}${variableName}=${escapetool.d}value)")
    #elseif ($variableName.matches('\$[a-zA-Z_][a-zA-Z0-9_-]*'))
        #evaluate("${escapetool.h}set(${variableName}=${escapetool.d}value)")
    #end
#end

#**
 * Begin the navigation panel
 *
*#
#macro(ru_beginNavigationPanel $homerollovertext)
    <div id="wrapper-sidebar">
        #set($active = false)
        #ru_checkActive("Main.WebHome" $active)
        <div class="panel panel-primary">
            <div class="panel-heading">Panel heading</div>
            <div class="list-group">
                <a title="" class="list-group-item href="$xwiki.getURL("Main.WebHome")">$msg.get("panel.navigation.home")</a>
            </div>
        </div>
#end

#**
  * End the navigation panel
  *
  *#
#macro(ru_endNavigationPanel) ##{
  </div>
#end ##}


#**
  * Displays a navigation category, with sub-elements
  *
  *#
#macro(ru_navigationCategory $text $rollovertext $link $expanded $items) ##{
  #set($iniexp = $expanded)
  #if($doc.space.startsWith("Coll_")) ##{
      #set ($expanded = $util.null)#setVariable ("$expanded" false)#set($expanded=false) ##{
    #set($cookiebase = "${context.user}_asset_")
  #else ##}{
    #set($cookiebase = "${context.user}_")
  #end ##}  
  #if(!$navcatcounter)  ##{
    #set($navcatcounter = 1)
  #else ##}{
    #set($navcatcounter = $navcatcounter + 1)
  #end ##}	  
  #set($id = "currikinavcategory_${navcatcounter}")
  #if($expanded == true) ##{
    #set($cookiemagic = "if(expanded) createCookie('${cookiebase}${id}','false', ''); else eraseCookie('${cookiebase}${id}');")
  #else ##}{
    #set($cookiemagic = "if(expanded) eraseCookie('${cookiebase}${id}'); else createCookie('${cookiebase}${id}', 'true', '');")
  #end ##}	  
  #set($exp2 = "")
  #set($exp2 = $xwiki.getUserPreferenceFromCookie("${cookiebase}$id"))
  #if(!$exp2.equals("")) ##{
    #if($exp2 == 'true') ##{
      #set($expanded = true)
    #else ##}{
      #set($expanded = false)
    #end ##}
  #end ##}	  
  #set($active = false)
  #foreach($item in $items) ##{
    #checkActive($item.get(1) $active)
  #end ##}	  
  #set($theCategLink = $link)
  #normalizelink($theCategLink)
<div class="panel panel-primary" id="${id}">
    <div class="panel-heading">$text</div>
  <div class="list-group">
  #foreach($item in $items) ##{
    #set($active = false)
    #checkActive($item.get(1) $active)
    #set($theItemLink = $item.get(1))
    #normalizelink($theItemLink)
    #set($linktitle = "")
    #if($item.size()>2) #set($linktitle="title='$item.get(2)'") #end
    <a class="list-group-item #if($active)selected#end" href="{pre}${theItemLink}{/pre}">$item.get(0)</a>
    #set($linktitle = "")
  #end ##}
  </div>
  </div> ##}
  #set($expanded=$iniexp) ##rolling back the parameter to initial value so it won't affect future calls to this macro
#end  ##}


#**
 * Displays a navigation entry (without sub-elements)
 *#
#macro(ru_navigationTopLevelEntry $text $link)
#set($active = false)
#checkActive($link $active)
<div class="curriki-nav-tlentry#if($active)active selected#end" #if(!$active) onmouseover="addClass(this, 'curriki-nav-tlentryactive')" onmouseout="rmClass(this, 'curriki-nav-tlentryactive')" #end>
<div class="curriki-nav-header"><h4>[$text>$link]</h4></div>
</div>
#end

#macro(ru_submitButton $name $shortcut $value)
<input class="btn btn-default" type="submit" name="$name"#if($keyboardShortcutsEnabled) title="$shortcut"#end value="$value"/>
#end

#**
 * Displays a submit button for the editor. This macro calls submitButton,
 * composing all its parameters based on the action's identifier and the
 * identifier of the corresponding localized resources.
 * @param action The identifier of the button's action.
 * @param resourceIdentifier The key used to identify the localized resources.
 *#
#macro(ru_editActionButton $action $resourceIdentifier)
#submitButton("action_${action}", $msg.get("core.shortcuts.edit.${resourceIdentifier}"), $msg.get($resourceIdentifier))
#end

#macro(ru_listMessages)
#set($the_space = "Messages_${doc.space}")
#set($messages = $xwiki.getSpaceDocsName($the_space))
#set($options = ["success", "info", "warning", "danger"])
#set($counter = 0)
#foreach($message_row in $messages)
#set($message_doc = $xwiki.getDocument($the_space, $message_row))
#set($messageObj = $message_doc.getObject("XWiki.ArticleClass"))
#if("$!messageObj" != "")
#if($counter == 3)
 #set($counter = 0)
#end
{{html clean="false"}}
<div class="alert alert-$options[$counter]">
<h4>{{/html}} $messageObj.getProperty("title").value {{html clean="false"}}</h4>
{{/html}} $messageObj.get("content") {{html clean="false"}}
</div>
{{/html}}
#set($counter = $counter + 1)
#end
#end
#end

